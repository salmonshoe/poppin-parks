{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\Ben's PC\\\\Desktop\\\\poppin-parks\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\Ben's PC\\\\desktop\\\\poppin-parks\\\\client\\\\src\\\\pages\\\\Landing.js\";\nimport React, { useState } from 'react';\nimport ReactMapGL from \"react-map-gl\";\n\nfunction Park() {\n  const _useState = useState({\n    latitude: 39.55555,\n    longitude: -75.163526,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        viewport = _useState2[0];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedPark = _useState4[0],\n        setSelectedPark = _useState4[1];\n\n  require(\"dotenv\").config();\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    mapStyle: \"mapbox://styles/leighhalliday/cjufmjn1r2kic1fl9wxg7u1l4\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), parkDate.features.map(park => React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    latitude: park.geometry.coordinates[1],\n    longitude: park.geometry.coordinates[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/skateboarding.svg\",\n    alt: \"Skate Park Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))), selectedPark ? React.createElement(Popup, {\n    latitude: selectedPark.geometry.coordinates[1],\n    longitude: selectedPark.geometry.coordinates[0],\n    onClose: () => {\n      setSelectedPark(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, selectedPark.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, selectedPark.properties.DESCRIPTIO))) : null));\n}","map":{"version":3,"sources":["c:\\Users\\Ben's PC\\desktop\\poppin-parks\\client\\src\\pages\\Landing.js"],"names":["React","useState","ReactMapGL","Park","latitude","longitude","width","height","zoom","viewport","selectedPark","setSelectedPark","require","config","process","env","REACT_APP_MAPBOX_TOKEN","setViewport","parkDate","features","map","park","properties","PARK_ID","geometry","coordinates","e","preventDefault","NAME","DESCRIPTIO"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,IAAT,GAAgB;AAAA,oBACGF,QAAQ,CAAC;AACxBG,IAAAA,QAAQ,EAAE,QADc;AAExBC,IAAAA,SAAS,EAAE,CAAC,SAFY;AAGxBC,IAAAA,KAAK,EAAE,OAHiB;AAIxBC,IAAAA,MAAM,EAAE,OAJgB;AAKxBC,IAAAA,IAAI,EAAE;AALkB,GAAD,CADX;AAAA;AAAA,QACTC,QADS;;AAAA,qBAQwBR,QAAQ,CAAC,IAAD,CARhC;AAAA;AAAA,QAQTS,YARS;AAAA,QAQKC,eARL;;AAShBC,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACC,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,oBACMJ,QADN;AAEE,IAAA,oBAAoB,EAAEK,OAAO,CAACC,GAAR,CAAYC,sBAFpC;AAGE,IAAA,QAAQ,EAAC,yDAHX;AAIE,IAAA,gBAAgB,EAAEP,QAAQ,IAAI;AAC5BQ,MAAAA,WAAW,CAACR,QAAD,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGS,QAAQ,CAACC,QAAT,CAAkBC,GAAlB,CAAsBC,IAAI,IACzB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAL,CAAgBC,OADvB;AAEE,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAFZ;AAGE,IAAA,SAAS,EAAEJ,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,OAAO,EAAEC,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAhB,MAAAA,eAAe,CAACU,IAAD,CAAf;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,GAAG,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,CADD,CARH,EA0BGX,YAAY,GACX,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAEA,YAAY,CAACc,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CADZ;AAEE,IAAA,SAAS,EAAEf,YAAY,CAACc,QAAb,CAAsBC,WAAtB,CAAkC,CAAlC,CAFb;AAGE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,YAAY,CAACY,UAAb,CAAwBM,IAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,YAAY,CAACY,UAAb,CAAwBO,UAA5B,CAFF,CAPF,CADW,GAaT,IAvCN,CADF,CADH;AA6CA","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactMapGL from \"react-map-gl\";\r\n\r\nfunction Park() {\r\nconst [viewport] = useState({\r\n    latitude: 39.55555,\r\n    longitude: -75.163526,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 10\r\n});\r\nconst [selectedPark, setSelectedPark] = useState(null);\r\nrequire(\"dotenv\").config()\r\n return (\r\n    <div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        mapStyle=\"mapbox://styles/leighhalliday/cjufmjn1r2kic1fl9wxg7u1l4\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {parkDate.features.map(park => (\r\n          <Marker\r\n            key={park.properties.PARK_ID}\r\n            latitude={park.geometry.coordinates[1]}\r\n            longitude={park.geometry.coordinates[0]}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setSelectedPark(park);\r\n              }}\r\n            >\r\n              <img src=\"/skateboarding.svg\" alt=\"Skate Park Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {selectedPark ? (\r\n          <Popup\r\n            latitude={selectedPark.geometry.coordinates[1]}\r\n            longitude={selectedPark.geometry.coordinates[0]}\r\n            onClose={() => {\r\n              setSelectedPark(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{selectedPark.properties.NAME}</h2>\r\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\r\n            </div>\r\n          </Popup>\r\n        ) : null}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}