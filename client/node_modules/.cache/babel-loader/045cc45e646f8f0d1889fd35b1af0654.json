{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\Ben's PC\\\\Desktop\\\\poppin-parks\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\Ben's PC\\\\desktop\\\\poppin-parks\\\\client\\\\src\\\\pages\\\\Landing.js\";\nimport React, { useState } from 'react';\nimport ReactMapGL from \"react-map-gl\"; // import * as parkDate from \".../data/\";\n\nfunction Park() {\n  const _useState = useState({\n    latitude: 39.55555,\n    longitude: -75.163526,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewport = _useState2[1]; // const [selectedPark, setSelectedPark] = useState(null);\n  // useEffect(() => {\n  //     const listener = e => {\n  //         if (e.key === \"Escape\") {\n  //             setSelectedPark(null);\n  //         }\n  //     };\n  //     window.addEventListener(\"keydown\", listener);\n  //     return () => {\n  //         window.removeEventListener(\"keydown\", listener);\n  //     };\n  // }, []);\n\n\n  require(\"dotenv\").config();\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    mapStyle: \"mapbox://styles/leighhalliday/cjufmjn1r2kic1fl9wxg7u1l4\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n}\n\nexport default Park;","map":{"version":3,"sources":["c:\\Users\\Ben's PC\\desktop\\poppin-parks\\client\\src\\pages\\Landing.js"],"names":["React","useState","ReactMapGL","Park","latitude","longitude","width","height","zoom","viewport","setViewport","require","config","process","env","REACT_APP_MAPBOX_TOKEN"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AAGA,SAASC,IAAT,GAAiB;AAAA,oBACcF,QAAQ,CAAC;AACpCG,IAAAA,QAAQ,EAAE,QAD0B;AAEpCC,IAAAA,SAAS,EAAE,CAAC,SAFwB;AAGpCC,IAAAA,KAAK,EAAE,OAH6B;AAIpCC,IAAAA,MAAM,EAAE,OAJ4B;AAKpCC,IAAAA,IAAI,EAAE;AAL8B,GAAD,CADtB;AAAA;AAAA,QACVC,QADU;AAAA,QACDC,WADC,kBAQjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGAC,EAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACC,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,oBACMH,QADN;AAEE,IAAA,oBAAoB,EAAEI,OAAO,CAACC,GAAR,CAAYC,sBAFpC;AAGE,IAAA,QAAQ,EAAC,yDAHX;AAIE,IAAA,gBAAgB,EAAEN,QAAQ,IAAI;AAC5BC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADH;AA6CA;;AAGD,eAAeN,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactMapGL from \"react-map-gl\";\r\n// import * as parkDate from \".../data/\";\r\n\r\n\r\nfunction Park () {\r\nconst [viewport,setViewport] = useState({\r\n    latitude: 39.55555,\r\n    longitude: -75.163526,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zoom: 10\r\n});\r\n// const [selectedPark, setSelectedPark] = useState(null);\r\n// useEffect(() => {\r\n//     const listener = e => {\r\n//         if (e.key === \"Escape\") {\r\n//             setSelectedPark(null);\r\n//         }\r\n//     };\r\n//     window.addEventListener(\"keydown\", listener);\r\n\r\n//     return () => {\r\n//         window.removeEventListener(\"keydown\", listener);\r\n//     };\r\n// }, []);\r\n\r\n\r\nrequire(\"dotenv\").config()\r\n return (\r\n    <div>\r\n      <ReactMapGL\r\n        {...viewport}\r\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n        mapStyle=\"mapbox://styles/leighhalliday/cjufmjn1r2kic1fl9wxg7u1l4\"\r\n        onViewportChange={viewport => {\r\n          setViewport(viewport);\r\n        }}\r\n      >\r\n        {/* {parkDate.features.map(park => (\r\n          <Marker\r\n            key={park.properties.PARK_ID}\r\n            latitude={park.geometry.coordinates[1]}\r\n            longitude={park.geometry.coordinates[0]}\r\n          >\r\n            <button\r\n              className=\"marker-btn\"\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                setSelectedPark(park);\r\n              }}\r\n            >\r\n              <img src=\"/skateboarding.svg\" alt=\"Skate Park Icon\" />\r\n            </button>\r\n          </Marker>\r\n        ))}\r\n\r\n        {selectedPark ? (\r\n          <Popup\r\n            latitude={selectedPark.geometry.coordinates[1]}\r\n            longitude={selectedPark.geometry.coordinates[0]}\r\n            onClose={() => {\r\n              setSelectedPark(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{selectedPark.properties.NAME}</h2>\r\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\r\n            </div>\r\n          </Popup>\r\n        ) : null} */}\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Park"]},"metadata":{},"sourceType":"module"}